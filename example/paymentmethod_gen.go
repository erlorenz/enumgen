// Code generated by go generate; DO NOT EDIT.

package example

import "fmt"


var (
    PaymentMethodUnknown = PaymentMethod{ "" }
    PaymentMethodACH = PaymentMethod{ "ach_payment" }
    PaymentMethodCreditCard = PaymentMethod{ "card" }
    PaymentMethodFree = PaymentMethod{ "free" }
    PaymentMethodNetTerms = PaymentMethod{ "netterms" }
)

type paymentmethodvalue string

// PaymentMethod simulates an enum with available values.
type PaymentMethod struct {
   value paymentmethodvalue
}

// String returns the display name of the PaymentMethod.
func (gt PaymentMethod) String() string {
    return paymentMethodValues[string(gt.value)]
}

// Value returns the value of the PaymentMethod.
func (gt PaymentMethod) Value() string {
    return string(gt.value)
}

// ParsePaymentMethod parses a value into a PaymentMethod.
// The error can be ignored if the zero value is desireable.
func ParsePaymentMethod(val string) (PaymentMethod, error) {
    if _, ok := paymentMethodValues[val]; ok {
        return PaymentMethod{ paymentmethodvalue(val) },nil
    }
    return PaymentMethod{}, fmt.Errorf("failed parsing PaymentMethod: invalid value %s", val)
}

